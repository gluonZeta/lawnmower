name: Java CI with Maven

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    name: CI compilation test
    runs-on: ubuntu-latest

    steps:
      - name: 1 - Code checkout
        uses: actions/checkout@v3

      - name: 2 - Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: 3 - compile step
        run: mvn -B clean compile --file pom.xml

  test:
    name: CI lancement des Tests Unitaires
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: 1 - Code checkout
        uses: actions/checkout@v3

      - name: 2 - Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: 3 - Unit Test run
        run: mvn -B test --file pom.xml

  quality:
    name: Build and analyze
    runs-on: ubuntu-latest
    needs: [ test ]

    steps:
      - name: 1 - Code checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: 2 - Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      - name: 3 - Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: 4 - Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 5 - Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=gluonZeta_lawnmower

      - name: 6 - File checks
        run: |
          ls -a
          cd target
          ls -a

  package:
    name: Packaging .zip
    runs-on: ubuntu-latest
    needs: [ test ]

    steps:
      - name: 1 - Checkout code step
        uses: actions/checkout@v3

      - name: 2 - Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven

      - name: 3 - Build with Maven
        run: mvn -B clean package --file pom.xml

      - name: 4 - List the current directory
        run: ls -a

      - name: 5 - Creation and upload Artefacts
        uses: actions/upload-artifact@v4
        with:
          name: lawnmower
          path: target/lawnmower-1.0.jar
